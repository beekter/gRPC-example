<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: version1.proto

namespace Version1\Favorites\Movie;

use UnexpectedValueException;

/**
 * Protobuf type <code>version1.Favorites.Movie.Genre</code>
 */
class Genre
{
    /**
     * Generated from protobuf enum <code>ACTION = 0;</code>
     */
    const ACTION = 0;
    /**
     * Generated from protobuf enum <code>COMEDY = 1;</code>
     */
    const COMEDY = 1;
    /**
     * Generated from protobuf enum <code>DRAMA = 2;</code>
     */
    const DRAMA = 2;
    /**
     * Generated from protobuf enum <code>HORROR = 3;</code>
     */
    const HORROR = 3;
    /**
     * Generated from protobuf enum <code>THRILLER = 4;</code>
     */
    const THRILLER = 4;
    /**
     * Generated from protobuf enum <code>FANTASY = 5;</code>
     */
    const FANTASY = 5;
    /**
     * Generated from protobuf enum <code>SCI_FI = 6;</code>
     */
    const SCI_FI = 6;
    /**
     * Generated from protobuf enum <code>OTHER = 7;</code>
     */
    const OTHER = 7;

    private static $valueToName = [
        self::ACTION => 'ACTION',
        self::COMEDY => 'COMEDY',
        self::DRAMA => 'DRAMA',
        self::HORROR => 'HORROR',
        self::THRILLER => 'THRILLER',
        self::FANTASY => 'FANTASY',
        self::SCI_FI => 'SCI_FI',
        self::OTHER => 'OTHER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Genre::class, \Version1\Favorites_Movie_Genre::class);

